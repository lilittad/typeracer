{"version":3,"sources":["components/header/logo.png","components/header/Header.js","utils/utils.js","components/race/components/typing-form/TypingForm.js","components/race/Race.js","components/history/History.js","services/TypingService.js","services/RequestService.js","components/main/Main.js","components/footer/Footer.js","components/app/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","logo","alt","LETTER_STATUS","getLetterStatus","currentWordIndex","currentLetterIndex","wIndex","lIndex","TypingForm","props","_useState","useState","inputValue","_useState2","Object","slicedToArray","setInputValue","_useState3","_useState4","inputValid","setInputValid","word","onCompleted","onInputChanged","onSubmit","e","preventDefault","autoFocus","type","value","onChange","event","newInputValue","target","startsWith","handleInputChange","defaultProps","RACE_STATUS","NOT_STARTED","IN_PROGRESS","FINISHED","Race","_useState5","_useState6","wordIndex","setWordIndex","words","text","trim","split","map","toConsumableArray","letter","key","concat","style","color","length","console","log","History","services_TypingService","baseUrl","this","get","configs","url","method","arguments","undefined","axios","objectSpread","then","_ref","data","reqUrl","request","Main","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","typingService","getText","result","raceText","race_Race","React","Component","Footer","App","header_Header","Main_Main","footer_Footer","ReactDOM","render","app_App","document","getElementById"],"mappings":"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","file":"static/js/main.5d7a4e48.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9d2f9e3e.png\";","import React from 'react';\n\nimport logo from './logo.png';\nimport './header.css';\n\nfunction Header() {\n    return (\n        <header className=\"header\">\n            <img src={logo} className=\"header__logo\" alt=\"logo\" />\n        </header>\n    );\n}\n\nexport default Header;\n","const LETTER_STATUS = {\n    PENDING: \"black\",\n    CORRECT: \"limegreen\",\n}\n\nexport const getLetterStatus = (currentWordIndex, currentLetterIndex, wIndex, lIndex) => {\n    if (wIndex < currentWordIndex || wIndex === currentWordIndex && lIndex < currentLetterIndex) {\n        return LETTER_STATUS.CORRECT;\n    }\n    return LETTER_STATUS.PENDING;\n}","import React, {useState} from 'react';\n\nimport PropTypes from 'prop-types';\n\n\nexport default function TypingForm(props) {\n    const [inputValue, setInputValue] = useState(props.inputValue);\n    const [inputValid, setInputValid] = useState(true);\n    const {word, onCompleted, onInputChanged} = props;\n\n    const handleInputChange = (event) => {\n        const newInputValue = event.target.value;\n        if (word + \" \" === newInputValue) {\n            onCompleted();\n            return;\n        }\n        if (word.startsWith(newInputValue)) {\n            setInputValue(newInputValue);\n            setInputValid(true);\n            onInputChanged(newInputValue);\n        } else {\n            setInputValid(false);\n        }\n    }\n\n    return (\n        <form className=\"form\" onSubmit={(e) => e.preventDefault()}>\n            <div className=\"inputField\">\n                <input autoFocus={true}\n                    className={inputValid ? \"inputField__input\" : \"inputField__input inputField__input_error\"}\n                    type=\"text\"\n                    value={inputValue}\n                    onChange={(e) => handleInputChange(e)}\n                />\n                {!inputValid && <span className=\"inputField-message inputField__message_error\">Wrong letter!!!Be careful next time</span>}\n            </div>\n        </form>\n    );\n}\n\nTypingForm.propTypes = {\n    inputValue: PropTypes.string,\n    word: PropTypes.string.isRequired,\n    onCompleted: PropTypes.func.isRequired,\n    onInputChanged: PropTypes.func.isRequired,\n};\n\nTypingForm.defaultProps = {\n    inputValue: ''\n};\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {getLetterStatus} from '../../utils/utils';\nimport TypingForm from './components/typing-form/TypingForm';\n\nimport './race.css';\n\nconst  RACE_STATUS = {\n    NOT_STARTED: 0,\n    IN_PROGRESS: 1,\n    FINISHED: 2,\n}\n\nfunction Race(props) {\n    const [status, setStatus] = useState(RACE_STATUS.NOT_STARTED);\n    const [inputValue, setInputValue] = useState('');\n    const [wordIndex, setWordIndex] = useState(0);\n    const words = props.text.trim().split(' ');\n\n    const handleTypingComplete = () => {\n        if (wordIndex + 1 < words.length ) {\n            setWordIndex(wordIndex+1);\n            setInputValue('');\n        } else {\n            console.log(\"reset me\");\n        }\n    }\n\n    const handleInputChange = (newInputValue) => {\n        setInputValue(newInputValue);\n    }\n\n    return (\n        <div className=\"race\">\n            <div className=\"race__text\">\n                {words.map((word,wIndex) =>\n                    [...word].map((letter, lIndex) =>\n                        <span\n                            key={`l_${wIndex}_${lIndex}`}\n                            style={{color: getLetterStatus(wordIndex, inputValue.length, wIndex, lIndex)}}>\n                            {letter}{lIndex === word.length-1 ? \" \": \"\"}\n                            </span>)\n                )}\n            </div>\n            <TypingForm\n                inputValue=\"\"\n                key={wordIndex}\n                word={words[wordIndex]}\n                onInputChanged={handleInputChange}\n                onCompleted={handleTypingComplete}\n            />\n\n        </div>\n    );\n}\n\nRace.propTypes = {\n    text: PropTypes.string,\n};\n\nRace.defaultProps = { text: '' };\n\nexport default Race;\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nimport './history.css';\n\nexport default function History(props) {\n    return (\n        <div className=\"history\">\n            {props.text}\n        </div>\n    );\n}\n\nHistory.propTypes = {\n    text: PropTypes.string,\n};\n\nHistory.defaultProps = { text: '' };\n","import RequestService from './RequestService';\n\nclass TypingService extends RequestService {\n    baseUrl = 'https://baconipsum.com/api';\n\n    getText() {\n        return this.get('?type=meat-and-filler&paras=1');\n    }\n\n}\n\nexport default new TypingService();\n","import axios from 'axios';\n\nexport default class RequestService {\n    baseUrl = '';\n    configs = {};\n\n    addRequestConfig(key, value) {\n        this.configs[key] = value;\n    }\n\n    request(url, method = 'GET') {\n        return axios({\n            ...this.configs,\n            method,\n            url,\n        }).then(({ data }) => data);\n    }\n\n    get(reqUrl) {\n        const url = `${this.baseUrl}${reqUrl}`;\n        return this.request(url);\n    }\n\n    post(reqUrl) {\n        const url = `${this.baseUrl}${reqUrl}`;\n        return this.request(url, 'POST');\n    }\n}\n","import React from 'react';\n\nimport Race from '../race/Race';\nimport History from '../history/History';\nimport typingService from '../../services/TypingService';\nimport './main.css';\n\n\n\nexport default class Main extends React.Component{\n    constructor(props) {\n        super(props);\n    }\n\n    async componentDidMount() {\n        const result = await typingService.getText();\n        console.log(result);\n    }\n\n\n    render() {\n        const raceText = \"Type text here if you want to be happy and healthy!!!\";\n        return (\n            <main className=\"main\">\n                <div className=\"main__item\">\n                    <Race text={raceText}/>\n                </div>\n                <div className=\"main__item\">\n                    <History text={raceText}/>\n                </div>\n            </main>\n        );\n    }\n}\n\n","import React from 'react';\n\nimport './footer.css';\n\nfunction Footer() {\n    return (\n        <header className=\"footer\">\n            Hello Footer\n        </header>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\n\nimport './app.css';\n\nimport Header from '../header/Header';\nimport Main from '../main/Main';\nimport Footer from '../footer/Footer';\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <Header/>\n            <Main/>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app/App';\n\nimport './styles/index.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}